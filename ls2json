#!/usr/bin/env php
<?php

function tree_Add(&$node,$key,$value) {
	if ( array_key_exists($key,$node) ) {
		if ( is_string($node[$key]) ) {
			$node[$key] = [ $node[$key] ];
			$node[$key][] = $value;
		}
		else if ( is_array($node[$key]) ) {
			$node[$key][] = $value;
		}
		else {
			// uh oh
			return false;
		}
	}
	else {
		$node[$key] = $value;
	}
	return true;
}


$data = [];

$indent = 0;
$stack = [];
$stack[] = &$data;

while ( ($line = fgets(STDIN)) !== false ) {
	$SP = &$stack[count($stack)-1];
	$m = [];
	
	preg_match_all('/\S+/', $line, $m, PREG_OFFSET_CAPTURE);
	if ( !isset($m[0][0]) ) {
		// Blank Line //
	}
	else if ( isset($m[0][0]) && $m[0][0][0][0] == "#" ) {
		// Comment (TODO: Make comment checking smarter) //
	}
	else if ( isset($m[0][1]) && $m[0][1][0] == "{" ) {
		$SP[$m[0][0][0]] = [];
		$stack[] = &$SP[$m[0][0][0]];

		$indent++;
	}
	else if ( isset($m[0][2]) && $m[0][2][0] == "{" ) {
		if ( !isset($SP[$m[0][0][0]]) ) {
			$SP[$m[0][0][0]] = [];
		}
		$SP[$m[0][0][0]][$m[0][1][0]] = [];
		$stack[] = &$SP[$m[0][0][0]][$m[0][1][0]];

		$indent++;
	}
	else if ( isset($m[0][0]) && $m[0][0][0] == "}" ) {
		$indent--;

		array_pop($stack);
	}
	else {
		$key = &$m[0][0][0];
		$value = trim(substr($line,$m[0][1][1]));
		
		// Check for ", ", and if found, make it an array //
		if ( strpos( $value, ', ' ) !== false ) {
			$value = explode(', ',$value);
		}
		
		tree_Add($SP,$key,$value);
	}
}

echo json_encode($data,JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES)."\n";
